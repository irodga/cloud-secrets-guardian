#!/bin/bash
set -euxo pipefail

# 🐳 Instalar Docker y herramientas necesarias
amazon-linux-extras install docker -y
yum install -y aws-cli jq ec2-instance-connect unzip
systemctl enable docker || true
systemctl start docker
usermod -aG docker ec2-user || true

# 🧱 Docker Compose
curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose

# 📦 Vault CLI
curl -sLo vault.zip https://releases.hashicorp.com/vault/${vault_version}/vault_${vault_version}_linux_amd64.zip
unzip vault.zip
mv vault /usr/local/bin/vault
chmod +x /usr/local/bin/vault
rm vault.zip

# 🛰️ SSM Agent
yum install -y https://s3.${aws_region}.amazonaws.com/amazon-ssm-${aws_region}/latest/linux_amd64/amazon-ssm-agent.rpm || true
systemctl enable amazon-ssm-agent || true
systemctl start amazon-ssm-agent || true

# 📁 Estructura Vault
mkdir -p /opt/vault/config /opt/vault/tls

# 🔐 TLS autofirmado
openssl req -new -x509 -days 365 -nodes \
  -out /opt/vault/tls/vault.crt \
  -keyout /opt/vault/tls/vault.key \
  -subj "/CN=vault"

# ⚙️ vault.hcl
cat > /opt/vault/config/vault.hcl <<EOF
storage "s3" {
  bucket     = "${bucket_name}"
  region     = "${aws_region}"
}
seal "awskms" {
  region     = "${aws_region}"
  kms_key_id = "${kms_key_id}"
}
listener "tcp" {
  address       = "0.0.0.0:8200"
  tls_cert_file = "/vault/tls/vault.crt"
  tls_key_file  = "/vault/tls/vault.key"
}
ui = true
disable_mlock = true
EOF

# 🧱 docker-compose.yml
cat > /opt/vault/docker-compose.yml <<EOF
version: '3.7'
services:
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: always
    network_mode: host
    cap_add:
      - IPC_LOCK
    volumes:
      - /opt/vault/config:/vault/config
      - /opt/vault/tls:/vault/tls
    command: vault server -config=/vault/config/vault.hcl
EOF

# 🚀 Lanzar Vault
docker-compose -f /opt/vault/docker-compose.yml up -d

# 🕗 Esperar readiness
export VAULT_ADDR=https://127.0.0.1:8200
export VAULT_SKIP_VERIFY=true

echo "⏳ Esperando a que Vault esté accesible y sin inicializar..."
until curl -sk \$VAULT_ADDR/v1/sys/health | grep -q '"initialized":false'; do
  sleep 2
done

# 🔐 Init Vault
vault operator init -format=json > /root/vault-init.json
jq -r '.unseal_keys_b64[0]' /root/vault-init.json | xargs vault operator unseal

# 🔑 Guardar token en Secrets Manager
root_token=\$(jq -r '.root_token' /root/vault-init.json)

aws secretsmanager create-secret \
  --region ${aws_region} \
  --name vault-root-token \
  --secret-string "\$root_token" || \
aws secretsmanager put-secret-value \
  --region ${aws_region} \
  --secret-id vault-root-token \
  --secret-string "\$root_token"

# 🌍 Exportar para sesiones futuras
echo "export VAULT_ADDR=https://127.0.0.1:8200" >> /etc/profile.d/vault.sh
echo "export VAULT_TOKEN=\$(jq -r '.root_token' /root/vault-init.json)" >> /etc/profile.d/vault.sh
chmod +x /etc/profile.d/vault.sh

echo "✅ Vault inicializado, desellado y token guardado."
